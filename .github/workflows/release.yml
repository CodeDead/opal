name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt-get install -y fuse libfuse2

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build
        run: ./gradlew build

      - name: Build (jlink)
        run: ./gradlew jlink

      - name: Build (jpackage)
        run: ./gradlew jpackage

      - name: Publish artifacts
        uses: softprops/action-gh-release@v2
        with:
          prerelease: false
          files: |
            build/jpackage/*
        env:
          GITHUB_TOKEN: ${{ github.token }}

  build-portable:
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt-get install -y fuse libfuse2

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Switch portable flag (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sed -i 's/final boolean PORTABLE = false/final boolean PORTABLE = true/g' src/main/java/com/codedead/opal/utils/SharedVariables.java

      - name: Switch portable flag (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: (Get-Content src\main\java\com\codedead\opal\utils\SharedVariables.java).replace('final boolean PORTABLE = false', 'final boolean PORTABLE = true') | Set-Content src\main\java\com\codedead\opal\utils\SharedVariables.java

      - name: Build
        run: ./gradlew build

      - name: Build (AppImage)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: ./gradlew AppImage

      - name: Build (jlink)
        run: ./gradlew jlink

      - name: Build (jpackage)
        run: ./gradlew jpackage

      - name: ZIP artifacts
        if: ${{ matrix.os == 'windows-latest' }}
        run: Compress-Archive -Path build/jpackage/Opal/* -Destination build/jpackage/Opal-win-portable.zip

      - name: Publish artifacts
        uses: softprops/action-gh-release@v2
        with:
          prerelease: false
          files: |
            build/AppImage/*.AppImage
            build/jpackage/*.zip
        env:
          GITHUB_TOKEN: ${{ github.token }}
